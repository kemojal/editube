from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '63fe804521b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Example: Renaming a column
    with op.batch_alter_table('activity_feed') as batch_op:
        batch_op.alter_column('metadata', new_column_name='meta_info')

    # Remove or comment out these lines if you do not intend to drop these tables
    # op.drop_table('notifications')
    # op.drop_table('projects')
    # op.drop_table('activity_feed')
    # op.drop_table('comments')
    # op.drop_table('project_collaborators')
    # op.drop_table('users')
    # op.drop_table('videos')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('activity_feed') as batch_op:
        batch_op.alter_column('meta_info', new_column_name='metadata')

    # Recreate tables only if you intend to reverse the drop
    op.create_table('videos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('videos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('uploader_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='videos_project_id_fkey'),
    sa.ForeignKeyConstraint(['uploader_id'], ['users.id'], name='videos_uploader_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='videos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project_collaborators',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_collaborators_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='project_collaborators_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_collaborators_pkey')
    )
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('comments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('video_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timecode', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='comments_user_id_fkey'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name='comments_video_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('activity_feed',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('metadata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='activity_feed_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='activity_feed_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='activity_feed_pkey')
    )
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('projects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name='projects_creator_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('video_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('read', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], name='notifications_comment_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='notifications_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name='notifications_video_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    # ### end Alembic commands ###
